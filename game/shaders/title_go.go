// Code generated by file2byteslice. DO NOT EDIT.

package shaders

var Title = []byte("//go:build ignore\n\npackage main\n\nvar (\n\tShowKeyPrompt float\n\tRadiusTex     vec2\n)\n\nfunc Fragment(position vec4, texCoord vec2, color vec4) vec4 {\n\talpha := color.a\n\n\tvar imgColor vec4 = vec4(1.0)\n\tif ShowKeyPrompt == 1.0 {\n\t\timgColor = imageSrc1UnsafeAt(texCoord)\n\t} else {\n\t\timgColor = imageSrc0UnsafeAt(texCoord)\n\t}\n\n\t// Round the corners\n\t// Top left\n\torigin, size := imageSrcRegionOnTexture()\n\tcenterTopLeft := origin + RadiusTex\n\tcenterTopRight := vec2(origin.x+size.x-RadiusTex.x, origin.y+RadiusTex.y)\n\tcenterBottomLeft := vec2(origin.x+RadiusTex.x, origin.y+size.y-RadiusTex.y)\n\tcenterBottomRight := vec2(origin.x+size.x-RadiusTex.x, origin.y+size.y-RadiusTex.y)\n\n\tif (texCoord.x < centerTopLeft.x) && (texCoord.y < centerTopLeft.y) && distance(texCoord, centerTopLeft) > RadiusTex.x {\n\t\talpha = 0.0\n\t} else if (texCoord.x > centerTopRight.x) && (texCoord.y < centerTopRight.y) && (distance(texCoord, centerTopRight) > RadiusTex.x) {\n\t\talpha = 0.0\n\t} else if (texCoord.x < centerBottomLeft.x) && (texCoord.y > centerBottomLeft.y) && (distance(texCoord, centerBottomLeft) > RadiusTex.x) {\n\t\talpha = 0.0\n\t} else if (texCoord.x > centerBottomRight.x) && (texCoord.y > centerBottomRight.y) && (distance(texCoord, centerBottomRight) > RadiusTex.x) {\n\t\talpha = 0.0\n\t}\n\n\timgColor *= alpha\n\treturn imgColor\n}\n")
